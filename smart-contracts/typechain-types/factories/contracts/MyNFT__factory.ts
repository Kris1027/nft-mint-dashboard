/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600581526020017f4d794e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250816000908161008c9190610335565b50806001908161009c9190610335565b50505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610407565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061016657607f821691505b6020821081036101795761017861011f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826101a4565b6101eb86836101a4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061023261022d61022884610203565b61020d565b610203565b9050919050565b6000819050919050565b61024c83610217565b61026061025882610239565b8484546101b1565b825550505050565b600090565b610275610268565b610280818484610243565b505050565b5b818110156102a45761029960008261026d565b600181019050610286565b5050565b601f8211156102e9576102ba8161017f565b6102c384610194565b810160208510156102d2578190505b6102e66102de85610194565b830182610285565b50505b505050565b600082821c905092915050565b600061030c600019846008026102ee565b1980831691505092915050565b600061032583836102fb565b9150826002028217905092915050565b61033e826100e5565b67ffffffffffffffff811115610357576103566100f0565b5b610361825461014e565b61036c8282856102a8565b600060209050601f83116001811461039f576000841561038d578287015190505b6103978582610319565b8655506103ff565b601f1984166103ad8661017f565b60005b828110156103d5578489015182556001820191506020850194506020810190506103b0565b868310156103f257848901516103ee601f8916826102fb565b8355505b6001600288020188555050505b505050505050565b612564806104166000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806375794a3c11610097578063c87b56dd11610066578063c87b56dd146102ab578063d0def521146102db578063e985e9c5146102f7578063f851a4401461032757610100565b806375794a3c1461023757806395d89b4114610255578063a22cb46514610273578063b88d4fde1461028f57610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d757806370a082311461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611950565b610345565b60405161012c9190611998565b60405180910390f35b61013d6103a6565b60405161014a9190611a43565b60405180910390f35b61016d60048036038101906101689190611a9b565b610438565b60405161017a9190611b09565b60405180910390f35b61019d60048036038101906101989190611b50565b610454565b005b6101b960048036038101906101b49190611b90565b61046a565b005b6101d560048036038101906101d09190611b90565b61056c565b005b6101f160048036038101906101ec9190611a9b565b61058c565b6040516101fe9190611b09565b60405180910390f35b610221600480360381019061021c9190611be3565b61059e565b60405161022e9190611c1f565b60405180910390f35b61023f610658565b60405161024c9190611c1f565b60405180910390f35b61025d61065e565b60405161026a9190611a43565b60405180910390f35b61028d60048036038101906102889190611c66565b6106f0565b005b6102a960048036038101906102a49190611ddb565b610706565b005b6102c560048036038101906102c09190611a9b565b61072b565b6040516102d29190611a43565b60405180910390f35b6102f560048036038101906102f09190611eff565b61083e565b005b610311600480360381019061030c9190611f5b565b610906565b60405161031e9190611998565b60405180910390f35b61032f61099a565b60405161033c9190611b09565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039f575061039e826109c0565b5b9050919050565b6060600080546103b590611fca565b80601f01602080910402602001604051908101604052809291908181526020018280546103e190611fca565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050905090565b600061044382610aa2565b5061044d82610b2a565b9050919050565b6104668282610461610b67565b610b6f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104dc5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104d39190611b09565b60405180910390fd5b60006104f083836104eb610b67565b610b81565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610566578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161055d93929190611ffb565b60405180910390fd5b50505050565b61058783838360405180602001604052806000815250610706565b505050565b600061059782610aa2565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106115760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106089190611b09565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b60606001805461066d90611fca565b80601f016020809104026020016040519081016040528092919081815260200182805461069990611fca565b80156106e65780601f106106bb576101008083540402835291602001916106e6565b820191906000526020600020905b8154815290600101906020018083116106c957829003601f168201915b5050505050905090565b6107026106fb610b67565b8383610d9b565b5050565b61071184848461046a565b61072561071c610b67565b85858585610f0a565b50505050565b606061073682610aa2565b50600060066000848152602001908152602001600020805461075790611fca565b80601f016020809104026020016040519081016040528092919081815260200182805461078390611fca565b80156107d05780601f106107a5576101008083540402835291602001916107d0565b820191906000526020600020905b8154815290600101906020018083116107b357829003601f168201915b5050505050905060006107e16110bb565b905060008151036107f6578192505050610839565b60008251111561082b57808260405160200161081392919061206e565b60405160208183030381529060405292505050610839565b610834846110d2565b925050505b919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c5906120de565b60405180910390fd5b600060075490506108df838261113b565b6108e98183611159565b600760008154809291906108fc9061212d565b9190505550505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a8b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a9b5750610a9a826111b5565b5b9050919050565b600080610aae8361121f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b189190611c1f565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b7c838383600161125c565b505050565b600080610b8d8461121f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bcf57610bce818486611421565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c6057610c1160008560008061125c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ce3576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e0c57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610e039190611b09565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610efd9190611998565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156110b4578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610f6994939291906121ca565b6020604051808303816000875af1925050508015610fa557506040513d601f19601f82011682018060405250810190610fa2919061222b565b60015b611029573d8060008114610fd5576040519150601f19603f3d011682016040523d82523d6000602084013e610fda565b606091505b50600081510361102157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110189190611b09565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146110b257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110a99190611b09565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606110dd82610aa2565b5060006110e86110bb565b905060008151116111085760405180602001604052806000815250611133565b80611112846114e5565b60405160200161112392919061206e565b6040516020818303038152906040525b915050919050565b6111558282604051806020016040528060008152506115b3565b5050565b806006600084815260200190815260200160002090816111799190612404565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111a99190611c1f565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112955750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156113c95760006112a584610aa2565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561131057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561132357506113218184610906565b155b1561136557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161135c9190611b09565b60405180910390fd5b81156113c757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61142c8383836115d7565b6114e057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114a157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114989190611c1f565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016114d79291906124d6565b60405180910390fd5b505050565b6060600060016114f484611698565b01905060008167ffffffffffffffff81111561151357611512611cb0565b5b6040519080825280601f01601f1916602001820160405280156115455781602001600182028036833780820191505090505b509050600082602001820190505b6001156115a8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161159c5761159b6124ff565b5b04945060008503611553575b819350505050919050565b6115bd83836117eb565b6115d26115c8610b67565b6000858585610f0a565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561168f57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611650575061164f8484610906565b5b8061168e57508273ffffffffffffffffffffffffffffffffffffffff1661167683610b2a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116f6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116ec576116eb6124ff565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611733576d04ee2d6d415b85acef81000000008381611729576117286124ff565b5b0492506020810190505b662386f26fc10000831061176257662386f26fc100008381611758576117576124ff565b5b0492506010810190505b6305f5e100831061178b576305f5e1008381611781576117806124ff565b5b0492506008810190505b61271083106117b05761271083816117a6576117a56124ff565b5b0492506004810190505b606483106117d357606483816117c9576117c86124ff565b5b0492506002810190505b600a83106117e2576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361185d5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118549190611b09565b60405180910390fd5b600061186b83836000610b81565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118df5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118d69190611b09565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61192d816118f8565b811461193857600080fd5b50565b60008135905061194a81611924565b92915050565b600060208284031215611966576119656118ee565b5b60006119748482850161193b565b91505092915050565b60008115159050919050565b6119928161197d565b82525050565b60006020820190506119ad6000830184611989565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119ed5780820151818401526020810190506119d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a15826119b3565b611a1f81856119be565b9350611a2f8185602086016119cf565b611a38816119f9565b840191505092915050565b60006020820190508181036000830152611a5d8184611a0a565b905092915050565b6000819050919050565b611a7881611a65565b8114611a8357600080fd5b50565b600081359050611a9581611a6f565b92915050565b600060208284031215611ab157611ab06118ee565b5b6000611abf84828501611a86565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611af382611ac8565b9050919050565b611b0381611ae8565b82525050565b6000602082019050611b1e6000830184611afa565b92915050565b611b2d81611ae8565b8114611b3857600080fd5b50565b600081359050611b4a81611b24565b92915050565b60008060408385031215611b6757611b666118ee565b5b6000611b7585828601611b3b565b9250506020611b8685828601611a86565b9150509250929050565b600080600060608486031215611ba957611ba86118ee565b5b6000611bb786828701611b3b565b9350506020611bc886828701611b3b565b9250506040611bd986828701611a86565b9150509250925092565b600060208284031215611bf957611bf86118ee565b5b6000611c0784828501611b3b565b91505092915050565b611c1981611a65565b82525050565b6000602082019050611c346000830184611c10565b92915050565b611c438161197d565b8114611c4e57600080fd5b50565b600081359050611c6081611c3a565b92915050565b60008060408385031215611c7d57611c7c6118ee565b5b6000611c8b85828601611b3b565b9250506020611c9c85828601611c51565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ce8826119f9565b810181811067ffffffffffffffff82111715611d0757611d06611cb0565b5b80604052505050565b6000611d1a6118e4565b9050611d268282611cdf565b919050565b600067ffffffffffffffff821115611d4657611d45611cb0565b5b611d4f826119f9565b9050602081019050919050565b82818337600083830152505050565b6000611d7e611d7984611d2b565b611d10565b905082815260208101848484011115611d9a57611d99611cab565b5b611da5848285611d5c565b509392505050565b600082601f830112611dc257611dc1611ca6565b5b8135611dd2848260208601611d6b565b91505092915050565b60008060008060808587031215611df557611df46118ee565b5b6000611e0387828801611b3b565b9450506020611e1487828801611b3b565b9350506040611e2587828801611a86565b925050606085013567ffffffffffffffff811115611e4657611e456118f3565b5b611e5287828801611dad565b91505092959194509250565b600067ffffffffffffffff821115611e7957611e78611cb0565b5b611e82826119f9565b9050602081019050919050565b6000611ea2611e9d84611e5e565b611d10565b905082815260208101848484011115611ebe57611ebd611cab565b5b611ec9848285611d5c565b509392505050565b600082601f830112611ee657611ee5611ca6565b5b8135611ef6848260208601611e8f565b91505092915050565b60008060408385031215611f1657611f156118ee565b5b6000611f2485828601611b3b565b925050602083013567ffffffffffffffff811115611f4557611f446118f3565b5b611f5185828601611ed1565b9150509250929050565b60008060408385031215611f7257611f716118ee565b5b6000611f8085828601611b3b565b9250506020611f9185828601611b3b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fe257607f821691505b602082108103611ff557611ff4611f9b565b5b50919050565b60006060820190506120106000830186611afa565b61201d6020830185611c10565b61202a6040830184611afa565b949350505050565b600081905092915050565b6000612048826119b3565b6120528185612032565b93506120628185602086016119cf565b80840191505092915050565b600061207a828561203d565b9150612086828461203d565b91508190509392505050565b7f6f6e6c792061646d696e2063616e206d696e7400000000000000000000000000600082015250565b60006120c86013836119be565b91506120d382612092565b602082019050919050565b600060208201905081810360008301526120f7816120bb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213882611a65565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361216a576121696120fe565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061219c82612175565b6121a68185612180565b93506121b68185602086016119cf565b6121bf816119f9565b840191505092915050565b60006080820190506121df6000830187611afa565b6121ec6020830186611afa565b6121f96040830185611c10565b818103606083015261220b8184612191565b905095945050505050565b60008151905061222581611924565b92915050565b600060208284031215612241576122406118ee565b5b600061224f84828501612216565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026122ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261227d565b6122c4868361227d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006123016122fc6122f784611a65565b6122dc565b611a65565b9050919050565b6000819050919050565b61231b836122e6565b61232f61232782612308565b84845461228a565b825550505050565b600090565b612344612337565b61234f818484612312565b505050565b5b818110156123735761236860008261233c565b600181019050612355565b5050565b601f8211156123b85761238981612258565b6123928461226d565b810160208510156123a1578190505b6123b56123ad8561226d565b830182612354565b50505b505050565b600082821c905092915050565b60006123db600019846008026123bd565b1980831691505092915050565b60006123f483836123ca565b9150826002028217905092915050565b61240d826119b3565b67ffffffffffffffff81111561242657612425611cb0565b5b6124308254611fca565b61243b828285612377565b600060209050601f83116001811461246e576000841561245c578287015190505b61246685826123e8565b8655506124ce565b601f19841661247c86612258565b60005b828110156124a45784890151825560018201915060208501945060208101905061247f565b868310156124c157848901516124bd601f8916826123ca565b8355505b6001600288020188555050505b505050505050565b60006040820190506124eb6000830185611afa565b6124f86020830184611c10565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220b06061a7a686ba2296e84fc04ef163efd991c525c01bb225d0dde0ede23786be64736f6c634300081c0033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}
